package sii15.a3MM.ASVDAndroid.activity;

import android.app.AlertDialog;
import android.content.DialogInterface;
import android.graphics.Color;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.ListView;
import android.widget.Toast;

import java.util.List;

import sii15.a3MM.ASVDAndroid.R;
import sii15.a3MM.ASVDAndroid.adapter.AppListAdapter;
import sii15.a3MM.ASVDAndroid.asynctask.LoadApp;
import sii15.a3MM.ASVDAndroid.model.ListAppModel;


public class AppFragment extends Fragment  {

    private static ListView list;
    private static FragmentActivity activity;
    private static Boolean onDevice = false;
    private static Boolean onServer = false;
    private static FragmentManager fm;
    private static AppListAdapter adapter;
    private static String toPass;
    private static String toPass2;
    private static AlertDialog a = null;

    public AppFragment() {
        // Required empty public constructor
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        return inflater.inflate(R.layout.fragment_app, container, false);
    }

    @Override
    public void onActivityCreated (Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);


        activity = getActivity();
        fm = getFragmentManager();
        //Async Task to get all installed app
        new LoadApp(activity).execute();

    }

    public static void createListView() {
        final ListAppModel model = ListAppModel.getListAppModel();
        adapter =  new AppListAdapter(activity, model.getApplist(), model.getPackages(), model.getPath(), model.getVersion(), model.getIcons());
        list = (ListView) activity.findViewById(R.id.list);
        list.setAdapter(adapter);
        final CharSequence[] items = {"On Device", "On Server"};

        final AlertDialog.Builder builder = new AlertDialog.Builder(activity);
        builder.setTitle("Analysis modes")
                .setSingleChoiceItems(items, 1, new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialogInterface, int item) {
                        if (items[item].equals("On Device")) {
                            onDevice = true;
                            onServer = false;
                            // Create new fragment and transaction

                            ResultsFragment rFragment = new ResultsFragment();
                            FragmentTransaction transaction = fm.beginTransaction();
                            Bundle arguments = new Bundle();
                            arguments.putString("path", toPass);
                            arguments.putString("name", toPass2);
                            rFragment.setArguments(arguments);

                            // Replace whatever is in the fragment_container view with this fragment,
                            // and add the transaction to the back stack
                            transaction.replace(R.id.container_body, rFragment);
                            transaction.addToBackStack(null);
                            transaction.commit();
                            a.cancel();

                            //Toast.makeText(activity, "onDevice " + onDevice + " onServer " + onServer, Toast.LENGTH_SHORT).show();

                        } else if (items[item].equals("On Server")) {
                            onDevice = false;
                            onServer = true;
                            Toast.makeText(activity, "onDevice " + onDevice + " onServer " + onServer, Toast.LENGTH_SHORT).show();
                        }
                    }
                });

        builder.setPositiveButton("Start", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int id) {
                if (onServer) ;//startScanOnServer()
                else if (onDevice) ; //startScanOndevice()
            }
        })
        .setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int id) {
            }
        });

        a = builder.create();

        list.setOnItemClickListener(new AdapterView.OnItemClickListener() {

            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                // TODO Auto-generated method stub

                List<String> pathList = model.getPath();
                toPass = pathList.get(position);
                toPass2 = adapter.getItem(position);

                //Log.d("aaa",temp);

                a.show();
                //int res = getResources().getColor(R.color.textColorPrimary);

                Button neg = a.getButton(DialogInterface.BUTTON_NEGATIVE);
                neg.setTextColor(Color.rgb(21, 101, 192));

                Button pos = a.getButton(DialogInterface.BUTTON_POSITIVE);
                pos.setTextColor(Color.rgb(21, 101, 192));


            }
        });
    }

}
