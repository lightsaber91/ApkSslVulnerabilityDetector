package sii15.a3MM.ASVDAndroid.database;

import android.database.sqlite.SQLiteOpenHelper;
import android.content.Context;
import android.database.sqlite.SQLiteDatabase;

/**
 * Created by Mattia on 16/06/2015.
 */
public class DataBaseWrapper extends SQLiteOpenHelper{

    private static final String DATABASE_NAME = "asvd.db";
    private static final int DATABASE_VERSION = 1;

    public static final String APP_TABLE = "applications";
    public static final String HOSTNAMEVERIFIER_TABLE = "hostNameVerifier";
    public static final String TRUSTMANAGER_TABLE = "trustManager";
    public static final String ALLOWALLHOSTNAME_TABLE = "allowAllHostname";
    public static final String SSLHANDLERERROR_TABLE = "sslHandlerError";
    public static final String SCORE_TABLE = "score";

    // applications table column
    public static final String ID_COLUMN = "id";
    public static final String APP_VERSION_COLUMN = "version";
    public static final String PACKAGE_NAME_COLUMN = "pk";

    public static final String APP_ID_COLUMN = "idApp";
    public static final String CLASS_COLUMN = "class";
    public static final String RESULT_COLUMN = "result";
    public static final String PERMISSION_COLUMN = "permission";
    public static final String INTENT_COLUMN = "intent";

   // creation SQLite statement
    private static final String CREATE_APP_TABLE = "create table " + APP_TABLE
            + "(" + ID_COLUMN + " integer primary key autoincrement, "
            + PACKAGE_NAME_COLUMN + " text , "
            + APP_VERSION_COLUMN + " text );";

    private static final String CREATE_HOSTNAMEVERIFIER_TABLE = "create table " + HOSTNAMEVERIFIER_TABLE
            + "(" + APP_ID_COLUMN + " integer, "
            + CLASS_COLUMN + " text , "
            + RESULT_COLUMN + " text);";

     private static final String CREATE_TRUSTMANAGER_TABLE = "create table " + TRUSTMANAGER_TABLE
        + "(" + APP_ID_COLUMN + " integer, "
        + CLASS_COLUMN + " text , "
        + RESULT_COLUMN + " text );";

    private static final String CREATE_ALLOWALLHM_TABLE = "create table " + ALLOWALLHOSTNAME_TABLE
            + "(" + APP_ID_COLUMN + " integer, "
            + CLASS_COLUMN + " text );";

    private static final String CREATE_SSLERRORHANDLER_TABLE = "create table " + SSLHANDLERERROR_TABLE
            + "(" + APP_ID_COLUMN + " integer, "
            + CLASS_COLUMN + " text , "
            + RESULT_COLUMN + " text);";

    private static final String CREATE_SCORE_TABLE =  "create table " + SCORE_TABLE
            + "(" + APP_ID_COLUMN + " integer, "
            + PERMISSION_COLUMN + " REAL , "
            + INTENT_COLUMN + " REAL);";

    public DataBaseWrapper(Context context) {
        super(context, DATABASE_NAME, null, DATABASE_VERSION);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        db.execSQL(CREATE_APP_TABLE);
        db.execSQL(CREATE_HOSTNAMEVERIFIER_TABLE);
        db.execSQL(CREATE_TRUSTMANAGER_TABLE);
        db.execSQL(CREATE_ALLOWALLHM_TABLE);
        db.execSQL(CREATE_SSLERRORHANDLER_TABLE);
        db.execSQL(CREATE_SCORE_TABLE);
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        db.execSQL("DROP TABLE IF EXISTS " + APP_TABLE);
        db.execSQL("DROP TABLE IF EXISTS " + HOSTNAMEVERIFIER_TABLE);
        db.execSQL("DROP TABLE IF EXISTS " + TRUSTMANAGER_TABLE );
        db.execSQL("DROP TABLE IF EXISTS " + ALLOWALLHOSTNAME_TABLE);
        db.execSQL("DROP TABLE IF EXISTS " + SSLHANDLERERROR_TABLE );
        db.execSQL("DROP TABLE IF EXISTS " + SCORE_TABLE);
        onCreate(db);
    }
}

