package sii15.a3MM.ASVDAndroid.asynctask;

import android.os.AsyncTask;
import android.util.Log;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpOptions;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;

import sii15.a3MM.ASVDAndroid.activity.OptionsFragment;
import sii15.a3MM.ASVDAndroid.model.Apk;

/**
 * Created by Simone Martucci on 23/06/15.
 */
public class SaveOnRemoteDb extends AsyncTask<Void, Void, Void> {

    private Apk app;

    public SaveOnRemoteDb(Apk a) {
        app = a;
    }


    @Override
    protected Void doInBackground(Void... params) {
        try {
            HttpClient httpclient = new DefaultHttpClient();
            StringBuilder builder = new StringBuilder();
            builder.append("http://android-sslvulnerability.rhcloud.com/push?pkg=").append(app.getPackageName());
            builder.append("&ver=").append(app.getPackageVersion()).append("&tmClass[]=");
            for(int i=0; i < app.getTME().size(); i++) {
                if(i == app.getTME().size() -1)
                    builder.append(app.getTME().get(i).getClasses());
                else
                    builder.append(app.getTME().get(i).getClasses()).append(",");
            }
            builder.append("&tmVuln[]=");
            for(int i=0; i < app.getTME().size(); i++) {
                if(i == app.getTME().size() -1)
                    builder.append(app.getTME().get(i).getVuln());
                else
                    builder.append(app.getTME().get(i).getVuln()).append(",");
            }
            builder.append("&hvClass[]=");
            for(int i=0; i < app.getHVE().size(); i++) {
                if(i == app.getHVE().size() -1)
                    builder.append(app.getHVE().get(i).getClasses());
                else
                    builder.append(app.getHVE().get(i).getClasses()).append(",");
            }
            builder.append("&hvVuln[]=");
            for(int i=0; i < app.getHVE().size(); i++) {
                if(i == app.getHVE().size() -1)
                    builder.append(app.getHVE().get(i).getVuln());
                else
                    builder.append(app.getHVE().get(i).getVuln()).append(",");
            }
            builder.append("&sslClass[]=");
            for(int i=0; i < app.getSSLE().size(); i++) {
                if(i == app.getSSLE().size() -1)
                    builder.append(app.getSSLE().get(i).getClasses());
                else
                    builder.append(app.getSSLE().get(i).getClasses()).append(",");
            }
            builder.append("&sslVuln[]=");
            for(int i=0; i < app.getSSLE().size(); i++) {
                if(i == app.getSSLE().size() -1)
                    builder.append(app.getSSLE().get(i).getVuln());
                else
                    builder.append(app.getSSLE().get(i).getVuln()).append(",");
            }
            builder.append("&aaClass[]=");
            for(int i=0; i < app.getAAE().size(); i++) {
                if(i == app.getAAE().size() -1)
                    builder.append(app.getAAE().get(i).getClasses());
                else
                    builder.append(app.getAAE().get(i).getClasses()).append(",");
            }

            if(OptionsFragment.getScanOption()) {
                builder.append("&pScore=").append(Float.toString(app.getpScore()));
                builder.append("&ifScore=").append(Float.toString(app.getIfScore()));
            }

            HttpPost httppost = new HttpPost(builder.toString());
            httpclient.execute(httppost);
        } catch (Exception e) {
            Log.e("error connection", e.toString());
            return null;
        }
        return null;    }
}
