package sii15.a3MM.ASVDAndroid.activity;

import android.app.AlertDialog;
import android.app.Dialog;
import android.content.DialogInterface;
import android.content.res.Resources;
import android.graphics.Color;
import android.os.Bundle;
import android.provider.CalendarContract;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.ListView;
import android.widget.Toast;

import com.gc.materialdesign.views.ButtonRectangle;

import sii15.a3MM.ASVDAndroid.R;
import sii15.a3MM.ASVDAndroid.adapter.AppListAdapter;
import sii15.a3MM.ASVDAndroid.asynctask.LoadApp;
import sii15.a3MM.ASVDAndroid.model.ListAppModel;


public class AppFragment extends Fragment  {

    private static ListView list;
    private static FragmentActivity activity;
    private static Boolean onDevice = false;
    private static Boolean onServer = false;

    public AppFragment() {
        // Required empty public constructor

    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        return inflater.inflate(R.layout.fragment_app, container, false);
    }

    @Override
    public void onActivityCreated (Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);

        activity = getActivity();
        //Async Task to get all installed app
        new LoadApp(activity).execute();

    }

    public static void createListView() {
        ListAppModel model = ListAppModel.getListAppModel();
        AppListAdapter adapter = new AppListAdapter(activity, model.getApplist(), model.getPackages(), model.getPath(), model.getVersion(), model.getIcons());
        list = (ListView) activity.findViewById(R.id.list);
        list.setAdapter(adapter);
        final CharSequence[] items = {"On Device", "On Server"};

        final AlertDialog.Builder builder = new AlertDialog.Builder(activity);
        builder.setTitle("Analysis modes")
                .setSingleChoiceItems(items, 1, new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialogInterface, int item) {
                        if (items[item].equals("On Device")) {
                            onDevice = true;
                            onServer = false;
                            Toast.makeText(activity, "onDevice " + onDevice + " onServer " + onServer, Toast.LENGTH_SHORT).show();
                        } else if (items[item].equals("On Server")) {
                            onDevice = false;
                            onServer = true;
                            Toast.makeText(activity, "onDevice " + onDevice + " onServer " + onServer, Toast.LENGTH_SHORT).show();
                        }
                    }
                });

        builder.setPositiveButton("Start", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int id) {
                if (onServer) ;//startScanOnServer()
                else if (onDevice) ; //startScanOndevice()
            }
        })
        .setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int id) {
            }
        });

        final AlertDialog a = builder.create();

        list.setOnItemClickListener(new AdapterView.OnItemClickListener() {

            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                // TODO Auto-generated method stub
                a.show();
                //int res = getResources().getColor(R.color.textColorPrimary);

                Button neg = a.getButton(DialogInterface.BUTTON_NEGATIVE);
                neg.setTextColor(Color.rgb(21,101,192));

                Button pos = a.getButton(DialogInterface.BUTTON_POSITIVE);
                pos.setTextColor(Color.rgb(21,101,192));


            }
        });
    }
}
