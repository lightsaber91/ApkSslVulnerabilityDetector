package sii15.a3MM.ASVDAndroid.asynctask;

import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.graphics.drawable.Drawable;
import android.os.AsyncTask;
import android.support.v4.app.FragmentActivity;
import android.util.Log;

import com.gc.materialdesign.widgets.ProgressDialog;

import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashSet;
import java.util.List;
import java.util.jar.Manifest;

import sii15.a3MM.ASVDAndroid.activity.AppFragment;
import sii15.a3MM.ASVDAndroid.model.ListAppModel;

/**
 * Created by Simone Martucci on 11/06/15.
 */
public class LoadApp extends AsyncTask<Void, Void, Void> {

    private ListAppModel list;
    private FragmentActivity activity;
    private ProgressDialog loading;

    public LoadApp(FragmentActivity fragmentActivity) {
        list = ListAppModel.getListAppModel();
        activity = fragmentActivity;
    }

    @Override
    protected void onPreExecute() {
        loading = new ProgressDialog(activity, "Loading app list...");
        loading.show();
    }

    @Override
    protected Void doInBackground(Void... params) {

        List<PackageInfo> PackList = activity.getPackageManager().getInstalledPackages(0);

        Collections.sort(PackList, new Comparator<PackageInfo>() {
            @Override
            public int compare(PackageInfo lhs, PackageInfo rhs) {
                String first = lhs.applicationInfo.loadLabel(activity.getPackageManager()).toString();
                String second = rhs.applicationInfo.loadLabel(activity.getPackageManager()).toString();
                return first.compareTo(second);
            }
        });

        List<String> app = new ArrayList<String>();
        List<Drawable> icons = new ArrayList<Drawable>();
        List<String> packages = new ArrayList<String>();
        List<String> versions = new ArrayList<String>();
        List<String> paths = new ArrayList<String>();

        for (int i=0; i < PackList.size(); i++)   {
            PackageInfo PackInfo = PackList.get(i);
            if (  (PackInfo.applicationInfo.flags & ApplicationInfo.FLAG_SYSTEM) == 0) {
                String AppName = PackInfo.applicationInfo.loadLabel(activity.getPackageManager()).toString();
                String Path = PackInfo.applicationInfo.sourceDir;
                String packageName = PackInfo.applicationInfo.packageName;
                String version = PackInfo.versionName;
                String[] requestedPermissions = PackInfo.requestedPermissions;
                if (PackageManager.PERMISSION_GRANTED == (activity.getPackageManager()).checkPermission(android.Manifest.permission.INTERNET,PackInfo.packageName)) {

                    if (!AppName.equals(null)) {
                        app.add(AppName);
                        packages.add(packageName);
                        versions.add(version);
                        paths.add(Path);

                        Drawable tmp = null;
                        try {
                            tmp = activity.getPackageManager().getApplicationIcon(packageName);
                        } catch (PackageManager.NameNotFoundException e) {
                            e.printStackTrace();
                        }
                        if (tmp != null) {
                            icons.add(tmp);
                        }

                    }
                }

            }
        }

        list.setApplist(app);
        list.setIcons(icons);
        list.setPackages(packages);
        list.setPath(paths);
        list.setVersion(versions);

        return null;
    }

    @Override
    protected void onPostExecute(Void v) {
        loading.dismiss();
        AppFragment.createListView();
    }

}
