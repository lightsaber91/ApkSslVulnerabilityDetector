package smali;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

public class EntryPoint {

	public static void main(String inputDir, String ouputDir) {
		
		File in = new File(inputDir);
		File out = new File(ouputDir);
		getFileList(in, ".smali");
		int rootPathLength = in.getAbsolutePath().length();
		for (File file : filelist) {
			String path = file.getAbsolutePath();
			File outFile = new File(out + File.separator + path.substring(rootPathLength + 1));
			File newOutFile = outFile.getParentFile();
			if (!newOutFile.exists()) {
				newOutFile.mkdirs();
			}
			Smali2JavaFile smali2JavaFile = new Smali2JavaFile(file);
			smali2JavaFile.toJava(outFile);
		}
/*		try {
			cl = parser.parse(options, args);

			if (cl.hasOption('h')) {
				//usage();
			}

			File singleFile = null;
			if (cl.hasOption('s')) {
				singleFile = new File(cl.getOptionValue('s'));
			}

			List<File> mutiFile = null;
			if (cl.hasOption('m')) {
				mutiFile = getFiles(cl.getOptionValue('m'));
			}

			File dir = null;
			if (cl.hasOption('d')) {
				dir = new File(cl.getOptionValue('d'));
			}

			File out = null;
			if (cl.hasOption('o')) {
				out = new File(cl.getOptionValue('o'));
			}

			if (null == out) {
				//usage();
			}

			if (null == singleFile && null == mutiFile && null == dir) {
				//usage();
			}

			if (null != singleFile) {
				Smali2JavaFile smali2JavaFile = new Smali2JavaFile(singleFile);
				smali2JavaFile.toJava(out);
			} else if (null != mutiFile) {
				for (File file : mutiFile) {
					Smali2JavaFile smali2JavaFile = new Smali2JavaFile(singleFile);
					smali2JavaFile.toJava(new File(out, file.getName()));
				}
			} else if (null != dir) {
				filelist.clear();
				getFileList(dir, ".smali");
				int rootPathLength = dir.getAbsolutePath().length();
				for (File file : filelist) {
					String path = file.getAbsolutePath();
					File outFile = new File(out + File.separator + path.substring(rootPathLength + 1));
					File newOutFile = outFile.getParentFile();
					if (!newOutFile.exists()) {
						newOutFile.mkdirs();
					}
					Smali2JavaFile smali2JavaFile = new Smali2JavaFile(file);
					smali2JavaFile.toJava(outFile);
				}
			}

			System.out.println("------ ������ ------");
		} catch (ParseException e) {
			e.printStackTrace();
		}
*/
	}
	private static List<File> getFiles(String apks) {
		List<File> apkPaths = new ArrayList<File>();
		String[] paths = apks.split(";");
		int length = paths.length;
		for (int i = 0; i < length; i++) {
			apkPaths.add(new File(paths[i]));
		}
		return apkPaths;
	}
	
	private static List<File> filelist = new ArrayList<File>();

	public static void getFileList(File dir, String extensions) {
		File[] files = dir.listFiles();
		if (files != null) {
			for (int i = 0; i < files.length; i++) {
				String fileName = files[i].getName();
				if (files[i].isDirectory()) {
					getFileList(files[i], extensions); 
				} else if (fileName.endsWith(extensions)) { 
					filelist.add(files[i]);
				} else {
					continue;
				}
			}

		}
	}
}
