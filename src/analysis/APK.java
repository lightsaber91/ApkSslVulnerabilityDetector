package analysis;

import java.io.File;
import java.io.IOException;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;
import util.Zip;
/**
 * 
 * @author Simone Martucci
 * @author Mattia Mancini
 * 
 */
public class APK {
	/**
	 * @param internet: true if apk require internet permission
	 * @param packageName: name of the app package
	 * @param packageVersion: version of the app
	 * @param apkFile: object that contains the entire APK app
	 * @param dex: classes.dex file containing the bytecode
	 */
	private static boolean internet = false;
	private static String packageName = null;
	private static String packageVersion = null;
	private static Zip apkFile = null;
	private static File dex = null;
	
	/**
	 * This contructor create new apk file and get the file permission,
	 * the package name and the package version
	 * 
	 * @param path: location of the APK
	 */
	public APK(String path) throws IOException, ParserConfigurationException, SAXException {
		apkFile = new Zip(path);
		packageName = apkFile.getPackageName();
		packageVersion = apkFile.getPackageVersion();
		internet = apkFile.getInternetPermission();
		dex = apkFile.getDexFile();
	}
	
	/**
	 * 
	 * @return package name of APK
	 */
	public String getPackage() {
		return packageName;
	}
	
	/**
	 * 
	 * @return package version of APK
	 */
	public String getVersion() {
		return packageVersion;
	}
	
	/**
	 * 
	 * @return true if internet permission required, false otherwise
	 */
	public boolean getPermssion() {
		return internet;
	}
	
	/**
	 * close the apk file
	 * @throws IOException
	 */
	public void close() throws IOException {
		apkFile.close();
	}
	
	/**
	 * 
	 * @return classes.dex file contained in APK
	 * @throws IOException
	 */
	public File getDexFile() throws IOException {
		return dex;
	}
	
}
