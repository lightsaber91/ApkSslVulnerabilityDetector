package it.sicurezzaMM15.dao;

import java.util.List;

import it.sicurezzaMM15.mapper.ApkMapper;
import it.sicurezzaMM15.mapper.TrustManagerMapper;
import it.sicurezzaMM15.model.Apk;
import it.sicurezzaMM15.model.TrustManagerError;

import javax.sql.DataSource;

import org.springframework.jdbc.core.JdbcTemplate;

public class ApkJDBCTemplate implements VulnerabilityDAO {
	
	private DataSource dataSource;
    private JdbcTemplate jdbcTemplateObject;
   
    @Override
    public void setDataSource(DataSource dataSource) {
    	this.dataSource = dataSource;
    	this.jdbcTemplateObject = new JdbcTemplate(dataSource);
    }
    
	@Override
	public Apk getApp(String pk, String version) {
		String SQL = "select * from applications where (pk, version) = (?, ?)";
		Apk apk = (Apk) jdbcTemplateObject.queryForObject(SQL, new Object[]{pk, version}, new ApkMapper());
		int id = apk.getId();
		
		SQL = "select * from trustManager where idApp = ?";
		List<TrustManagerError> tm = jdbcTemplateObject.query(SQL, new Object[] {id}, new TrustManagerMapper());
		apk.setTME(tm);
		
		return apk;
	}

	@Override
	public void insertApp(String pk, String version) {
		String SQL = "insert into Student (pk, version) values (?, ?)";
	    jdbcTemplateObject.update(SQL, new Object[] {pk, version});
	    return;
	}

	@Override
	public void addTmVul(int id , List<TrustManagerError> tm) {
		// TODO Auto-generated method stub
		for(TrustManagerError tmp : tm) {
			String SQL = "insert into Student (idApp, class, result) values (?, ?, ?)";
		    jdbcTemplateObject.update(SQL, new Object[] {id, tmp.getClasses(), tmp.getVuln()});
		}
		return;
	}

	@Override
	public void addHnVul(int id ,List<String> classes, List<String> vuln) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void addAllowAllVul(int id ,List<String> classes, List<String> vuln) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void addSslVul(int id ,List<String> classes, List<String> vuln) {
		// TODO Auto-generated method stub
		
	}
}
